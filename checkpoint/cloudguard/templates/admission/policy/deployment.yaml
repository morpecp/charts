{{- $config := fromYaml (include "admission.policy.config" .) -}}
{{- if $config.featureConfig.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "agent.resource.name" $config }}
  namespace: {{ .Release.Namespace }}
  annotations:
    agentVersion: {{ $config.agentConfig.tag }}
  labels:
{{ include "common.labels.with.chart" $config | indent 4 }}
spec:
  selector:
    matchLabels:
{{ include "common.labels" $config | indent 6 }}
  replicas: 1
  template:
    metadata:
      annotations:
{{ include "common.pod.annotations" $config | indent 8 }}
      labels:
{{ include "common.labels" $config | indent 8 }}
    spec:
{{ include "common.pod.properties" $config | indent 6 }}
{{- if ne (include "get.platform" $config) "openshift" }}
      securityContext:
        runAsUser: {{ include "cloudguard.nonroot.user" $config }}
        runAsGroup: {{ include "cloudguard.nonroot.user" $config }}
{{- end }}
      containers:
      # Main container
      - name: {{ $config.agentName }}
        image: {{ template "agent.main.image" $config }}
        imagePullPolicy: {{ $config.Values.imagePullPolicy }}
        volumeMounts:
        - name: secret-volume
          mountPath: /etc/secret-volume
        - name: metrics
          mountPath: /metric
        - name: metrics-tail
          mountPath: /metric-tail
        command: ["/admission_rule_updater"]
        env:
{{ include "common.env" $config | indent 8 }}
        {{- if $config.agentConfig.resources }}
        resources:
{{ toYaml $config.agentConfig.resources | indent 10 }}
        {{- end }}
      # fluentbit
      - name: fluentbit
        image: {{ template "agent.fluentbit.image" $config }}
        imagePullPolicy: {{ $config.Values.imagePullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
{{- if ne (include "get.platform" $config) "openshift" }}
          runAsUser: {{ include "cloudguard.nonroot.user" $config }}
          runAsGroup: {{ include "cloudguard.nonroot.user" $config }}
{{- end }}
        env:
{{ include "fluentbit.env" $config | indent 8 }}
        - name: CP_KUBERNETES_METRIC_URI
          value: {{ template "cloudguardURL_path" $config }}agenttelemetry
        {{- if $config.agentConfig.fluentbit.resources }}
        resources:
{{ toYaml $config.agentConfig.fluentbit.resources | indent 10}}
        {{- end }}
        volumeMounts:
        - name: config-volume-fluentbit
          mountPath: /fluent-bit/etc/fluent-bit.conf
          subPath: fluent-bit.conf
        - name: metrics
          mountPath: /metric
        - name: metrics-tail
          mountPath: /metric-tail
      volumes:
      - name: secret-volume
        secret:
          secretName: {{ .Release.Name }}-cp-cloudguard-creds
      - name: config-volume-fluentbit
        configMap:
          name: {{ template "agent.resource.name" $config }}-fluentbit-metrics
      - name: metrics
        emptyDir: {}
      - name: metrics-tail
        emptyDir: {}

{{ end }}